{"remainingRequest":"D:\\zyttWork\\MSCode微服务平台-中移铁通有限公司智能产品分公司\\MSCode微服务平台源码和SQL-中移铁通有限公司智能产品分公司\\MSCode微服务平台升级(20200713)-中移铁通有限公司智能产品分公司\\mscodevue\\node_modules\\babel-loader\\lib\\index.js!D:\\zyttWork\\MSCode微服务平台-中移铁通有限公司智能产品分公司\\MSCode微服务平台源码和SQL-中移铁通有限公司智能产品分公司\\MSCode微服务平台升级(20200713)-中移铁通有限公司智能产品分公司\\mscodevue\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\zyttWork\\MSCode微服务平台-中移铁通有限公司智能产品分公司\\MSCode微服务平台源码和SQL-中移铁通有限公司智能产品分公司\\MSCode微服务平台升级(20200713)-中移铁通有限公司智能产品分公司\\mscodevue\\src\\store\\modules\\user.js","dependencies":[{"path":"D:\\zyttWork\\MSCode微服务平台-中移铁通有限公司智能产品分公司\\MSCode微服务平台源码和SQL-中移铁通有限公司智能产品分公司\\MSCode微服务平台升级(20200713)-中移铁通有限公司智能产品分公司\\mscodevue\\src\\store\\modules\\user.js","mtime":1597221536360},{"path":"D:\\zyttWork\\MSCode微服务平台-中移铁通有限公司智能产品分公司\\MSCode微服务平台源码和SQL-中移铁通有限公司智能产品分公司\\MSCode微服务平台升级(20200713)-中移铁通有限公司智能产品分公司\\mscodevue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\zyttWork\\MSCode微服务平台-中移铁通有限公司智能产品分公司\\MSCode微服务平台源码和SQL-中移铁通有限公司智能产品分公司\\MSCode微服务平台升级(20200713)-中移铁通有限公司智能产品分公司\\mscodevue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\zyttWork\\MSCode微服务平台-中移铁通有限公司智能产品分公司\\MSCode微服务平台源码和SQL-中移铁通有限公司智能产品分公司\\MSCode微服务平台升级(20200713)-中移铁通有限公司智能产品分公司\\mscodevue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/zyttWork/MSCode微服务平台-中移铁通有限公司智能产品分公司/MSCode微服务平台源码和SQL-中移铁通有限公司智能产品分公司/MSCode微服务平台升级(20200713)-中移铁通有限公司智能产品分公司/mscodevue/src/store/modules/user.js"],"names":["login","getInfo","getPublicKey","getToken","setToken","removeToken","router","resetRouter","JSEncrypt","state","token","name","avatar","introduction","roles","mutations","SET_TOKEN","SET_INTRODUCTION","SET_NAME","SET_AVATAR","SET_ROLES","actions","userInfo","commit","tenantCode","username","password","Promise","resolve","reject","pubKey","encryptStr","setPublicKey","final_password","encrypt","toString","trim","then","response","access_token","catch","error","data","nickname","length","logout","dispatch","root","resetToken","changeRoles","role","accessRoutes","console","log","addRoutes","namespaced"],"mappings":"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","sourcesContent":["import { login, getInfo, getPublicKey } from '@/api/user'\nimport { getToken, setToken, removeToken } from '@/utils/auth'\nimport router, { resetRouter } from '@/router'\nimport JSEncrypt from 'jsencrypt';\nconst state = {\n  token: getToken(),\n  name: '',\n  avatar: '',\n  introduction: '',\n  roles: []\n}\n\nconst mutations = {\n  SET_TOKEN: (state, token) => {\n    state.token = token\n  },\n  SET_INTRODUCTION: (state, introduction) => {\n    state.introduction = introduction\n  },\n  SET_NAME: (state, name) => {\n    state.name = name\n  },\n  SET_AVATAR: (state, avatar) => {\n    state.avatar = avatar\n  },\n  SET_ROLES: (state, roles) => {\n    state.roles = roles\n  }\n}\n\nconst actions = {\n  // user login\n  login ({ commit }, userInfo) {\n    const { tenantCode, username, password } = userInfo\n    return new Promise(async (resolve, reject) => {\n      var pubKey=await getPublicKey()\n      let encryptStr = new JSEncrypt();\n      encryptStr.setPublicKey(pubKey); // 设置 加密公钥\n      let final_password= encryptStr.encrypt( password.toString());  // 进行加密\n      login({ tenantCode: tenantCode.trim(), username: username.trim(), password:final_password}).then(response => {\n        commit('SET_TOKEN', response.access_token)\n        setToken(response.access_token)\n        resolve()\n      }).catch(error => {\n        reject(error)\n      })\n    })\n  },\n\n  // get user info\n  getInfo ({ commit, state }) {\n    return new Promise((resolve, reject) => {\n      getInfo(state.token).then(response => {\n        const { data } = response\n\n        if (!data) {\n          reject('验证失败，请重新登录。')\n        }\n\n        data.roles = ['ROLE_ADMIN']\n        data.name = data.username\n        data.introduction = data.nickname\n        const { roles, name, avatar, introduction } = data\n\n        if (!roles || roles.length <= 0) {\n          reject('角色必须为非null数组！')\n        }\n\n        commit('SET_ROLES', roles)\n        commit('SET_NAME', name)\n        commit('SET_AVATAR', avatar)\n        commit('SET_INTRODUCTION', introduction)\n        resolve(data)\n      }).catch(error => {\n        reject(error)\n      })\n    })\n  },\n\n  // user logout\n  logout ({ commit, state, dispatch }) {\n    return new Promise((resolve, reject) => {\n      commit('SET_TOKEN', '')\n      commit('SET_ROLES', [])\n      removeToken()\n      resetRouter()\n\n      // reset visited views and cached views\n      dispatch('tagsView/delAllViews', null, { root: true })\n\n      resolve()\n    })\n  },\n\n  // remove token\n  resetToken ({ commit }) {\n    return new Promise(resolve => {\n      commit('SET_TOKEN', '')\n      commit('SET_ROLES', [])\n      removeToken()\n      resolve()\n    })\n  },\n\n  // dynamically modify permissions\n  async changeRoles ({ commit, dispatch }, role) {\n    const token = role + '-token'\n\n    commit('SET_TOKEN', token)\n    setToken(token)\n\n\n    const { roles } = await dispatch('getInfo')\n    resetRouter()\n\n    // generate accessible routes map based on roles\n    const accessRoutes = await dispatch('permission/generateRoutes', roles, { root: true })\n    console.log(accessRoutes)\n    // dynamically add accessible routes\n    router.addRoutes(accessRoutes)\n\n    // reset visited views and cached views\n    dispatch('tagsView/delAllViews', null, { root: true })\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n}\n"]}]}