{"remainingRequest":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jingguanran\\Desktop\\mscodevue\\src\\views\\personaloa\\assigneetask.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\src\\views\\personaloa\\assigneetask.vue","mtime":1596417159348},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgcXVlcnlQZXJzb25hbFRhc2ssIHF1ZXJ5VXNlcm5hbWUsIGdldEhpZ2hMaWdodGVkUHJvY2Vzc0RpYWdyYW0sIGNvbXBsZXRlVGFzaywgcmVzb2x2ZVRhc2ssIGRlbGVnYXRlVGFzaywgcmVncmVzc1Rhc2ssIHJlamVjdFRhc2ssIHRlcm1pbmF0ZVRhc2sgfSBmcm9tICdAL2FwaS9hY3Rpdml0aSc7CmltcG9ydCB3YXZlcyBmcm9tICdAL2RpcmVjdGl2ZS93YXZlcyc7IC8vIHdhdmVzIGRpcmVjdGl2ZQoKaW1wb3J0IFBhZ2luYXRpb24gZnJvbSAnQC9jb21wb25lbnRzL1BhZ2luYXRpb24nOyAvLyBzZWNvbmRhcnkgcGFja2FnZSBiYXNlZCBvbiBlbC1wYWdpbmF0aW9uCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0Fzc2lnbmVlVGFzaycsCiAgY29tcG9uZW50czogewogICAgUGFnaW5hdGlvbjogUGFnaW5hdGlvbgogIH0sCiAgZGlyZWN0aXZlczogewogICAgd2F2ZXM6IHdhdmVzCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFibGVLZXk6IDAsCiAgICAgIGxpc3Q6IFtdLAogICAgICB0b3RhbDogMCwKICAgICAgbGlzdExvYWRpbmc6IHRydWUsCiAgICAgIGxpc3RRdWVyeTogewogICAgICAgIGN1cnJlbnRQYWdlOiAxLAogICAgICAgIHBhZ2VTaXplOiAxMCwKICAgICAgICB0YXNrU3RhdHVzOiAnYXNzaWduZWUnLAogICAgICAgIHRhc2tOYW1lOiB1bmRlZmluZWQKICAgICAgfSwKICAgICAgY2FuZGlkYXRlT3B0aW9uczogW10sCiAgICAgIHRlbXA6IHsKICAgICAgICBpZDogdW5kZWZpbmVkCiAgICAgIH0sCiAgICAgIHRyYWNrRGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIHN2Z1NyYzogJycsCiAgICAgIGRpYWxvZ0Zvcm1WaXNpYmxlOiBmYWxzZSwKICAgICAgZGlhbG9nU3RhdHVzOiAnJywKICAgICAgdGV4dE1hcDogewogICAgICAgIGNvbXBsZXRlOiB0aGlzLiR0KCd0YXNrLmNvbXBsZXRlJyksCiAgICAgICAgZGVsZWdhdGU6IHRoaXMuJHQoJ3Rhc2suZGVsZWdhdGUnKSwKICAgICAgICByZWdyZXNzOiB0aGlzLiR0KCd0YXNrLnJlZ3Jlc3MnKSwKICAgICAgICByZWplY3Q6IHRoaXMuJHQoJ3Rhc2sucmVqZWN0JyksCiAgICAgICAgdGVybWluYXRlOiB0aGlzLiR0KCd0YXNrLnRlcm1pbmF0ZScpCiAgICAgIH0sCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgY29tbWVudDogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogdGhpcy4kdCgndGFzay50YXNrQ29tbWVudC1yZXF1aXJlZCcpLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0KICAgICAgfQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldExpc3QoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldExpc3Q6IGZ1bmN0aW9uIGdldExpc3QoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZTsKICAgICAgcXVlcnlQZXJzb25hbFRhc2sodGhpcy5saXN0UXVlcnkpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMubGlzdCA9IHJlc3BvbnNlLmRhdGEubGlzdDsKICAgICAgICBfdGhpcy50b3RhbCA9IHJlc3BvbnNlLmRhdGEucGFnaW5hdGlvbi50b3RhbDsKICAgICAgICBfdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlOwogICAgICB9KTsKICAgICAgcXVlcnlVc2VybmFtZSgpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMuY2FuZGlkYXRlT3B0aW9ucyA9IHJlc3BvbnNlLmRhdGE7CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZUZpbHRlcjogZnVuY3Rpb24gaGFuZGxlRmlsdGVyKCkgewogICAgICB0aGlzLmxpc3RRdWVyeS5jdXJyZW50UGFnZSA9IDE7CiAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgfSwKICAgIGhhbmRsZVJlc2V0OiBmdW5jdGlvbiBoYW5kbGVSZXNldCgpIHsKICAgICAgdGhpcy5saXN0UXVlcnkudGFza05hbWUgPSAnJzsKICAgICAgdGhpcy5oYW5kbGVGaWx0ZXIoKTsKICAgIH0sCiAgICBoYW5kbGVUcmFjazogZnVuY3Rpb24gaGFuZGxlVHJhY2socm93KSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgZ2V0SGlnaExpZ2h0ZWRQcm9jZXNzRGlhZ3JhbShyb3cucHJvY2Vzc0luc3RhbmNlSWQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaWYgKHJlc3BvbnNlLm1lc3NhZ2UgPT09ICdzdWNjZXNzJykgewogICAgICAgICAgX3RoaXMyLnN2Z1NyYyA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICBfdGhpczIudHJhY2tEaWFsb2dWaXNpYmxlID0gdHJ1ZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMyLnN2Z1NyYyA9ICcnOwoKICAgICAgICAgIF90aGlzMi5oYW5kbGVXYXJuaW5nKHJlc3BvbnNlKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZUNvbXBsZXRlOiBmdW5jdGlvbiBoYW5kbGVDb21wbGV0ZShyb3cpIHsKICAgICAgdGhpcy50ZW1wID0gT2JqZWN0LmFzc2lnbih7fSwgcm93KTsgLy8gY29weSBvYmoKCiAgICAgIHRoaXMuZGlhbG9nU3RhdHVzID0gJ2NvbXBsZXRlJzsKICAgICAgdGhpcy5kaWFsb2dGb3JtVmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgaGFuZGxlRGVsZWdhdGU6IGZ1bmN0aW9uIGhhbmRsZURlbGVnYXRlKHJvdykgewogICAgICB0aGlzLnRlbXAgPSBPYmplY3QuYXNzaWduKHt9LCByb3cpOyAvLyBjb3B5IG9iagoKICAgICAgdGhpcy5kaWFsb2dTdGF0dXMgPSAnZGVsZWdhdGUnOwogICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICBoYW5kbGVSZWdyZXNzOiBmdW5jdGlvbiBoYW5kbGVSZWdyZXNzKHJvdykgewogICAgICB0aGlzLnRlbXAgPSBPYmplY3QuYXNzaWduKHt9LCByb3cpOyAvLyBjb3B5IG9iagoKICAgICAgdGhpcy5kaWFsb2dTdGF0dXMgPSAncmVncmVzcyc7CiAgICAgIHRoaXMuZGlhbG9nRm9ybVZpc2libGUgPSB0cnVlOwogICAgfSwKICAgIGhhbmRsZVJlamVjdDogZnVuY3Rpb24gaGFuZGxlUmVqZWN0KHJvdykgewogICAgICB0aGlzLnRlbXAgPSBPYmplY3QuYXNzaWduKHt9LCByb3cpOyAvLyBjb3B5IG9iagoKICAgICAgdGhpcy5kaWFsb2dTdGF0dXMgPSAncmVqZWN0JzsKICAgICAgdGhpcy5kaWFsb2dGb3JtVmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgaGFuZGxlVGVybWluYXRlOiBmdW5jdGlvbiBoYW5kbGVUZXJtaW5hdGUocm93KSB7CiAgICAgIHRoaXMudGVtcCA9IE9iamVjdC5hc3NpZ24oe30sIHJvdyk7IC8vIGNvcHkgb2JqCgogICAgICB0aGlzLmRpYWxvZ1N0YXR1cyA9ICd0ZXJtaW5hdGUnOwogICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICBzdGFydERhdGE6IGZ1bmN0aW9uIHN0YXJ0RGF0YSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLiRyZWZzWydkYXRhRm9ybSddLnZhbGlkYXRlKGZ1bmN0aW9uICh2YWxpZCkgewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgaWYgKF90aGlzMy5kaWFsb2dTdGF0dXMgPT09ICdjb21wbGV0ZScgJiYgKF90aGlzMy50ZW1wLmRlbGVnYXRpb25TdGF0ZSA9PT0gbnVsbCB8fCBfdGhpczMudGVtcC5kZWxlZ2F0aW9uU3RhdGUgPT09ICdSRVNPTFZFRCcpKSB7CiAgICAgICAgICAgIHZhciB0ZW1wRGF0YSA9IHt9OwogICAgICAgICAgICB0ZW1wRGF0YS50YXNrSWQgPSBfdGhpczMudGVtcC5pZDsKICAgICAgICAgICAgdGVtcERhdGEucHJvY2Vzc0luc3RhbmNlSWQgPSBfdGhpczMudGVtcC5wcm9jZXNzSW5zdGFuY2VJZDsKICAgICAgICAgICAgdGVtcERhdGEuY2FuZGlkYXRlID0gX3RoaXMzLnRlbXAuY2FuZGlkYXRlOwogICAgICAgICAgICB0ZW1wRGF0YS5jb21tZW50ID0gX3RoaXMzLnRlbXAuY29tbWVudDsKICAgICAgICAgICAgY29tcGxldGVUYXNrKHRlbXBEYXRhKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgIGlmIChyZXNwb25zZS5tZXNzYWdlID09PSAnc3VjY2VzcycpIHsKICAgICAgICAgICAgICAgIF90aGlzMy5saXN0LnVuc2hpZnQoX3RoaXMzLnRlbXApOwoKICAgICAgICAgICAgICAgIF90aGlzMy5kaWFsb2dGb3JtVmlzaWJsZSA9IGZhbHNlOwoKICAgICAgICAgICAgICAgIF90aGlzMy4kbm90aWZ5KHsKICAgICAgICAgICAgICAgICAgdGl0bGU6IF90aGlzMy4kdCgnY29tbW9uLnN1Y2Nlc3MnKSwKICAgICAgICAgICAgICAgICAgbWVzc2FnZTogX3RoaXMzLiR0KCd0YXNrLmNvbXBsZXRlLXN1Y2Nlc3MnKSwKICAgICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgX3RoaXMzLmhhbmRsZVJlc2V0KCk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIF90aGlzMy5oYW5kbGVXYXJuaW5nKHJlc3BvbnNlKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIGlmIChfdGhpczMuZGlhbG9nU3RhdHVzID09PSAnY29tcGxldGUnICYmIF90aGlzMy50ZW1wLmRlbGVnYXRpb25TdGF0ZSA9PT0gJ1BFTkRJTkcnKSB7CiAgICAgICAgICAgIHZhciBfdGVtcERhdGEgPSB7fTsKICAgICAgICAgICAgX3RlbXBEYXRhLnRhc2tJZCA9IF90aGlzMy50ZW1wLmlkOwogICAgICAgICAgICBfdGVtcERhdGEucHJvY2Vzc0luc3RhbmNlSWQgPSBfdGhpczMudGVtcC5wcm9jZXNzSW5zdGFuY2VJZDsKICAgICAgICAgICAgX3RlbXBEYXRhLmNvbW1lbnQgPSBfdGhpczMudGVtcC5jb21tZW50OwogICAgICAgICAgICByZXNvbHZlVGFzayhfdGVtcERhdGEpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLm1lc3NhZ2UgPT09ICdzdWNjZXNzJykgewogICAgICAgICAgICAgICAgX3RoaXMzLmxpc3QudW5zaGlmdChfdGhpczMudGVtcCk7CgogICAgICAgICAgICAgICAgX3RoaXMzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2U7CgogICAgICAgICAgICAgICAgX3RoaXMzLiRub3RpZnkoewogICAgICAgICAgICAgICAgICB0aXRsZTogX3RoaXMzLiR0KCdjb21tb24uc3VjY2VzcycpLAogICAgICAgICAgICAgICAgICBtZXNzYWdlOiBfdGhpczMuJHQoJ3Rhc2suaGFuZGxlLWRlbGVnYXRlLXN1Y2Nlc3MnKSwKICAgICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgX3RoaXMzLmhhbmRsZVJlc2V0KCk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIF90aGlzMy5oYW5kbGVXYXJuaW5nKHJlc3BvbnNlKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIGlmIChfdGhpczMuZGlhbG9nU3RhdHVzID09PSAnZGVsZWdhdGUnKSB7CiAgICAgICAgICAgIHZhciBfdGVtcERhdGEyID0ge307CiAgICAgICAgICAgIF90ZW1wRGF0YTIudGFza0lkID0gX3RoaXMzLnRlbXAuaWQ7CiAgICAgICAgICAgIF90ZW1wRGF0YTIucHJvY2Vzc0luc3RhbmNlSWQgPSBfdGhpczMudGVtcC5wcm9jZXNzSW5zdGFuY2VJZDsKICAgICAgICAgICAgX3RlbXBEYXRhMi5hc3NpZ25lZSA9IF90aGlzMy50ZW1wLmNhbmRpZGF0ZTsKICAgICAgICAgICAgX3RlbXBEYXRhMi5jb21tZW50ID0gX3RoaXMzLnRlbXAuY29tbWVudDsKICAgICAgICAgICAgZGVsZWdhdGVUYXNrKF90ZW1wRGF0YTIpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLm1lc3NhZ2UgPT09ICdzdWNjZXNzJykgewogICAgICAgICAgICAgICAgX3RoaXMzLmxpc3QudW5zaGlmdChfdGhpczMudGVtcCk7CgogICAgICAgICAgICAgICAgX3RoaXMzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2U7CgogICAgICAgICAgICAgICAgX3RoaXMzLiRub3RpZnkoewogICAgICAgICAgICAgICAgICB0aXRsZTogX3RoaXMzLiR0KCdjb21tb24uc3VjY2VzcycpLAogICAgICAgICAgICAgICAgICBtZXNzYWdlOiBfdGhpczMuJHQoJ3Rhc2suZGVsZWdhdGUtc3VjY2VzcycpLAogICAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBfdGhpczMuaGFuZGxlUmVzZXQoKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgX3RoaXMzLmhhbmRsZVdhcm5pbmcocmVzcG9uc2UpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9IGVsc2UgaWYgKF90aGlzMy5kaWFsb2dTdGF0dXMgPT09ICdyZWdyZXNzJykgewogICAgICAgICAgICB2YXIgX3RlbXBEYXRhMyA9IHt9OwogICAgICAgICAgICBfdGVtcERhdGEzLnRhc2tJZCA9IF90aGlzMy50ZW1wLmlkOwogICAgICAgICAgICBfdGVtcERhdGEzLnByb2Nlc3NJbnN0YW5jZUlkID0gX3RoaXMzLnRlbXAucHJvY2Vzc0luc3RhbmNlSWQ7CiAgICAgICAgICAgIF90ZW1wRGF0YTMuY29tbWVudCA9IF90aGlzMy50ZW1wLmNvbW1lbnQ7CiAgICAgICAgICAgIHJlZ3Jlc3NUYXNrKF90ZW1wRGF0YTMpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLm1lc3NhZ2UgPT09ICdzdWNjZXNzJykgewogICAgICAgICAgICAgICAgX3RoaXMzLmxpc3QudW5zaGlmdChfdGhpczMudGVtcCk7CgogICAgICAgICAgICAgICAgX3RoaXMzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2U7CgogICAgICAgICAgICAgICAgX3RoaXMzLiRub3RpZnkoewogICAgICAgICAgICAgICAgICB0aXRsZTogX3RoaXMzLiR0KCdjb21tb24uc3VjY2VzcycpLAogICAgICAgICAgICAgICAgICBtZXNzYWdlOiBfdGhpczMuJHQoJ3Rhc2sucmVncmVzcy1zdWNjZXNzJyksCiAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIF90aGlzMy5oYW5kbGVSZXNldCgpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBfdGhpczMuaGFuZGxlV2FybmluZyhyZXNwb25zZSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSBpZiAoX3RoaXMzLmRpYWxvZ1N0YXR1cyA9PT0gJ3JlamVjdCcpIHsKICAgICAgICAgICAgdmFyIF90ZW1wRGF0YTQgPSB7fTsKICAgICAgICAgICAgX3RlbXBEYXRhNC50YXNrSWQgPSBfdGhpczMudGVtcC5pZDsKICAgICAgICAgICAgX3RlbXBEYXRhNC5wcm9jZXNzSW5zdGFuY2VJZCA9IF90aGlzMy50ZW1wLnByb2Nlc3NJbnN0YW5jZUlkOwogICAgICAgICAgICBfdGVtcERhdGE0LmNvbW1lbnQgPSBfdGhpczMudGVtcC5jb21tZW50OwogICAgICAgICAgICByZWplY3RUYXNrKF90ZW1wRGF0YTQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLm1lc3NhZ2UgPT09ICdzdWNjZXNzJykgewogICAgICAgICAgICAgICAgX3RoaXMzLmxpc3QudW5zaGlmdChfdGhpczMudGVtcCk7CgogICAgICAgICAgICAgICAgX3RoaXMzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2U7CgogICAgICAgICAgICAgICAgX3RoaXMzLiRub3RpZnkoewogICAgICAgICAgICAgICAgICB0aXRsZTogX3RoaXMzLiR0KCdjb21tb24uc3VjY2VzcycpLAogICAgICAgICAgICAgICAgICBtZXNzYWdlOiBfdGhpczMuJHQoJ3Rhc2sucmVqZWN0LXN1Y2Nlc3MnKSwKICAgICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgX3RoaXMzLmhhbmRsZVJlc2V0KCk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIF90aGlzMy5oYW5kbGVXYXJuaW5nKHJlc3BvbnNlKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIGlmIChfdGhpczMuZGlhbG9nU3RhdHVzID09PSAndGVybWluYXRlJykgewogICAgICAgICAgICB2YXIgX3RlbXBEYXRhNSA9IHt9OwogICAgICAgICAgICBfdGVtcERhdGE1LnRhc2tJZCA9IF90aGlzMy50ZW1wLmlkOwogICAgICAgICAgICBfdGVtcERhdGE1LnByb2Nlc3NJbnN0YW5jZUlkID0gX3RoaXMzLnRlbXAucHJvY2Vzc0luc3RhbmNlSWQ7CiAgICAgICAgICAgIF90ZW1wRGF0YTUuY29tbWVudCA9IF90aGlzMy50ZW1wLmNvbW1lbnQ7CiAgICAgICAgICAgIHRlcm1pbmF0ZVRhc2soX3RlbXBEYXRhNSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICBpZiAocmVzcG9uc2UubWVzc2FnZSA9PT0gJ3N1Y2Nlc3MnKSB7CiAgICAgICAgICAgICAgICBfdGhpczMubGlzdC51bnNoaWZ0KF90aGlzMy50ZW1wKTsKCiAgICAgICAgICAgICAgICBfdGhpczMuZGlhbG9nRm9ybVZpc2libGUgPSBmYWxzZTsKCiAgICAgICAgICAgICAgICBfdGhpczMuJG5vdGlmeSh7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiBfdGhpczMuJHQoJ2NvbW1vbi5zdWNjZXNzJyksCiAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IF90aGlzMy4kdCgndGFzay50ZXJtaW5hdGUtc3VjY2VzcycpLAogICAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBfdGhpczMuaGFuZGxlUmVzZXQoKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgX3RoaXMzLmhhbmRsZVdhcm5pbmcocmVzcG9uc2UpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVXYXJuaW5nOiBmdW5jdGlvbiBoYW5kbGVXYXJuaW5nKHJlc3BvbnNlKSB7CiAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgdGl0bGU6IHRoaXMuJHQoJ2NvbW1vbi53YXJuaW5nJyksCiAgICAgICAgbWVzc2FnZTogcmVzcG9uc2UubWVzc2FnZSwKICAgICAgICB0eXBlOiAnd2FybmluZycsCiAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["assigneetask.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input v-model=\"listQuery.taskName\" :placeholder=\"$t('task.current')\" clearable style=\"width: 200px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">\n        {{ $t('common.query') }}\n      </el-button>\n      <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-refresh-right\" @click=\"handleReset\">\n        {{ $t('common.reset') }}\n      </el-button>\n    </div>\n\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n    >\n      <el-table-column :label=\"$t('process.processDefinitionName')\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.processDefinitionName }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('process.processInstanceName')\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.processInstanceName }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('task.current')\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('task.startTime')\" min-width=\"100px\" prop=\"startTime\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.taskLocalVariables.startTime | parseTime('{y}-{m}-{d} {h}:{i}:{s}') }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('task.endTime')\" min-width=\"100px\" prop=\"endTime\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.taskLocalVariables.endTime | parseTime('{y}-{m}-{d} {h}:{i}:{s}') }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('task.description')\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.taskLocalVariables.description }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('common.operate')\" min-width=\"190px\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row}\">\n          <el-button type=\"primary\" size=\"mini\" style=\"margin-right: -5px\" @click=\"handleTrack(row)\">\n            {{ $t('process.track') }}\n          </el-button>\n          <el-button type=\"primary\" size=\"mini\" @click=\"handleComplete(row)\">\n            {{ $t('task.complete') }}\n          </el-button>\n          <el-button type=\"primary\" size=\"mini\" style=\"margin-left: 5px\" @click=\"handleDelegate(row)\">\n            {{ $t('task.delegate') }}\n          </el-button>\n          <el-button type=\"primary\" size=\"mini\" style=\"margin-left: 5px\" @click=\"handleRegress(row)\">\n            {{ $t('task.regress') }}\n          </el-button>\n          <el-button type=\"primary\" size=\"mini\" style=\"margin-top: 5px\" @click=\"handleReject(row)\">\n            {{ $t('task.reject') }}\n          </el-button>\n          <el-button type=\"primary\" size=\"mini\" style=\"margin-left: 5px\" @click=\"handleTerminate(row)\">\n            {{ $t('task.terminate') }}\n          </el-button>\n          <router-link :to=\"{path: '/personaloa/mytaskdetails', query: { processInstanceId: row.processInstanceId, processDefinitionName: row.processDefinitionName, processInstanceName: row.processInstanceName, name: row.name, startTime: row.taskLocalVariables.startTime, endTime: row.taskLocalVariables.endTime, description: row.taskLocalVariables.description } }\">\n            <el-button type=\"primary\" size=\"mini\" style=\"margin-left: 5px\">\n              {{ $t('process.details') }}\n            </el-button>\n          </router-link>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.currentPage\" :limit.sync=\"listQuery.pageSize\" @pagination=\"getList\" />\n\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"right\" label-width=\"90px\" style=\"width: 100%\">\n        <el-form-item v-if=\"dialogStatus==='complete' || dialogStatus==='delegate'\" :label=\"$t('process.candidate')\" prop=\"candidate\">\n          <el-select v-model=\"temp.candidate\" :placeholder=\"$t('common.choose')\" clearable class=\"filter-item\" style=\"width: 100%\">\n            <el-option-group v-for=\"group in candidateOptions\" :key=\"group.value\" :label=\"group.value\">\n              <el-option v-for=\"item in group.children\" :key=\"item.key\" :label=\"item.value\" :value=\"item.key\" />\n            </el-option-group>\n          </el-select>\n        </el-form-item>\n        <el-form-item :label=\"$t('process.comments')\" prop=\"comment\">\n          <el-input v-model=\"temp.comment\" type=\"textarea\" :placeholder=\"$t('common.enter')\" maxlength=\"512\" clearable />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">\n          {{ $t('common.cancel') }}\n        </el-button>\n        <el-button type=\"primary\" @click=\"startData()\">\n          {{ $t('common.confirm') }}\n        </el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog fullscreen :visible.sync=\"trackDialogVisible\">\n      <div v-html=\"svgSrc\" />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { queryPersonalTask, queryUsername, getHighLightedProcessDiagram, completeTask, resolveTask, delegateTask, regressTask, rejectTask, terminateTask } from '@/api/activiti'\nimport waves from '@/directive/waves' // waves directive\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\n\nexport default {\n  name: 'AssigneeTask',\n  components: { Pagination },\n  directives: { waves },\n  data() {\n    return {\n      tableKey: 0,\n      list: [],\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 10,\n        taskStatus: 'assignee',\n        taskName: undefined\n      },\n      candidateOptions: [],\n      temp: {\n        id: undefined\n      },\n      trackDialogVisible: false,\n      svgSrc: '',\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        complete: this.$t('task.complete'),\n        delegate: this.$t('task.delegate'),\n        regress: this.$t('task.regress'),\n        reject: this.$t('task.reject'),\n        terminate: this.$t('task.terminate')\n      },\n      rules: {\n        comment: [{ required: true, message: this.$t('task.taskComment-required'), trigger: 'blur' }]\n      }\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    getList() {\n      this.listLoading = true\n      queryPersonalTask(this.listQuery).then(response => {\n        this.list = response.data.list\n        this.total = response.data.pagination.total\n        this.listLoading = false\n      })\n      queryUsername().then(response => {\n        this.candidateOptions = response.data\n      })\n    },\n    handleFilter() {\n      this.listQuery.currentPage = 1\n      this.getList()\n    },\n    handleReset() {\n      this.listQuery.taskName = ''\n      this.handleFilter()\n    },\n    handleTrack(row) {\n      getHighLightedProcessDiagram(row.processInstanceId).then(response => {\n        if (response.message === 'success') {\n          this.svgSrc = response.data\n          this.trackDialogVisible = true\n        } else {\n          this.svgSrc = ''\n          this.handleWarning(response)\n        }\n      })\n    },\n    handleComplete(row) {\n      this.temp = Object.assign({}, row) // copy obj\n      this.dialogStatus = 'complete'\n      this.dialogFormVisible = true\n    },\n    handleDelegate(row) {\n      this.temp = Object.assign({}, row) // copy obj\n      this.dialogStatus = 'delegate'\n      this.dialogFormVisible = true\n    },\n    handleRegress(row) {\n      this.temp = Object.assign({}, row) // copy obj\n      this.dialogStatus = 'regress'\n      this.dialogFormVisible = true\n    },\n    handleReject(row) {\n      this.temp = Object.assign({}, row) // copy obj\n      this.dialogStatus = 'reject'\n      this.dialogFormVisible = true\n    },\n    handleTerminate(row) {\n      this.temp = Object.assign({}, row) // copy obj\n      this.dialogStatus = 'terminate'\n      this.dialogFormVisible = true\n    },\n    startData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          if (this.dialogStatus === 'complete' && (this.temp.delegationState === null || this.temp.delegationState === 'RESOLVED')) {\n            const tempData = {}\n            tempData.taskId = this.temp.id\n            tempData.processInstanceId = this.temp.processInstanceId\n            tempData.candidate = this.temp.candidate\n            tempData.comment = this.temp.comment\n            completeTask(tempData).then(response => {\n              if (response.message === 'success') {\n                this.list.unshift(this.temp)\n                this.dialogFormVisible = false\n                this.$notify({\n                  title: this.$t('common.success'),\n                  message: this.$t('task.complete-success'),\n                  type: 'success',\n                  duration: 2000\n                })\n                this.handleReset()\n              } else {\n                this.handleWarning(response)\n              }\n            })\n          } else if (this.dialogStatus === 'complete' && this.temp.delegationState === 'PENDING') {\n            const tempData = {}\n            tempData.taskId = this.temp.id\n            tempData.processInstanceId = this.temp.processInstanceId\n            tempData.comment = this.temp.comment\n            resolveTask(tempData).then(response => {\n              if (response.message === 'success') {\n                this.list.unshift(this.temp)\n                this.dialogFormVisible = false\n                this.$notify({\n                  title: this.$t('common.success'),\n                  message: this.$t('task.handle-delegate-success'),\n                  type: 'success',\n                  duration: 2000\n                })\n                this.handleReset()\n              } else {\n                this.handleWarning(response)\n              }\n            })\n          } else if (this.dialogStatus === 'delegate') {\n            const tempData = {}\n            tempData.taskId = this.temp.id\n            tempData.processInstanceId = this.temp.processInstanceId\n            tempData.assignee = this.temp.candidate\n            tempData.comment = this.temp.comment\n            delegateTask(tempData).then(response => {\n              if (response.message === 'success') {\n                this.list.unshift(this.temp)\n                this.dialogFormVisible = false\n                this.$notify({\n                  title: this.$t('common.success'),\n                  message: this.$t('task.delegate-success'),\n                  type: 'success',\n                  duration: 2000\n                })\n                this.handleReset()\n              } else {\n                this.handleWarning(response)\n              }\n            })\n          } else if (this.dialogStatus === 'regress') {\n            const tempData = {}\n            tempData.taskId = this.temp.id\n            tempData.processInstanceId = this.temp.processInstanceId\n            tempData.comment = this.temp.comment\n            regressTask(tempData).then(response => {\n              if (response.message === 'success') {\n                this.list.unshift(this.temp)\n                this.dialogFormVisible = false\n                this.$notify({\n                  title: this.$t('common.success'),\n                  message: this.$t('task.regress-success'),\n                  type: 'success',\n                  duration: 2000\n                })\n                this.handleReset()\n              } else {\n                this.handleWarning(response)\n              }\n            })\n          } else if (this.dialogStatus === 'reject') {\n            const tempData = {}\n            tempData.taskId = this.temp.id\n            tempData.processInstanceId = this.temp.processInstanceId\n            tempData.comment = this.temp.comment\n            rejectTask(tempData).then(response => {\n              if (response.message === 'success') {\n                this.list.unshift(this.temp)\n                this.dialogFormVisible = false\n                this.$notify({\n                  title: this.$t('common.success'),\n                  message: this.$t('task.reject-success'),\n                  type: 'success',\n                  duration: 2000\n                })\n                this.handleReset()\n              } else {\n                this.handleWarning(response)\n              }\n            })\n          } else if (this.dialogStatus === 'terminate') {\n            const tempData = {}\n            tempData.taskId = this.temp.id\n            tempData.processInstanceId = this.temp.processInstanceId\n            tempData.comment = this.temp.comment\n            terminateTask(tempData).then(response => {\n              if (response.message === 'success') {\n                this.list.unshift(this.temp)\n                this.dialogFormVisible = false\n                this.$notify({\n                  title: this.$t('common.success'),\n                  message: this.$t('task.terminate-success'),\n                  type: 'success',\n                  duration: 2000\n                })\n                this.handleReset()\n              } else {\n                this.handleWarning(response)\n              }\n            })\n          }\n        }\n      })\n    },\n    handleWarning(response) {\n      this.$notify({\n        title: this.$t('common.warning'),\n        message: response.message,\n        type: 'warning',\n        duration: 2000\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/personaloa"}]}