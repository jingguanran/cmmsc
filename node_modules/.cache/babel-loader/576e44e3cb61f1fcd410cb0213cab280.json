{"remainingRequest":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\jingguanran\\Desktop\\mscodevue\\mock\\index.js","dependencies":[{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\mock\\index.js","mtime":1596417160042},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5jb25zdHJ1Y3RvciIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZyIpOwoKdmFyIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyID0gcmVxdWlyZSgiQzovVXNlcnMvamluZ2d1YW5yYW4vRGVza3RvcC9tc2NvZGV2dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciIpOwoKdmFyIF90b0NvbnN1bWFibGVBcnJheSA9IHJlcXVpcmUoIkM6L1VzZXJzL2ppbmdndWFucmFuL0Rlc2t0b3AvbXNjb2RldnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3RvQ29uc3VtYWJsZUFycmF5Iik7Cgp2YXIgTW9jayA9IHJlcXVpcmUoJ21vY2tqcycpOwoKdmFyIF9yZXF1aXJlID0gcmVxdWlyZSgnLi91dGlscycpLAogICAgcGFyYW0yT2JqID0gX3JlcXVpcmUucGFyYW0yT2JqOwoKdmFyIHVzZXIgPSByZXF1aXJlKCcuL3VzZXInKTsKCnZhciByb2xlID0gcmVxdWlyZSgnLi9yb2xlJyk7Cgp2YXIgYXJ0aWNsZSA9IHJlcXVpcmUoJy4vYXJ0aWNsZScpOwoKdmFyIHNlYXJjaCA9IHJlcXVpcmUoJy4vcmVtb3RlLXNlYXJjaCcpOwoKdmFyIG1vY2tzID0gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheSh1c2VyKSwgX3RvQ29uc3VtYWJsZUFycmF5KHJvbGUpLCBfdG9Db25zdW1hYmxlQXJyYXkoYXJ0aWNsZSksIF90b0NvbnN1bWFibGVBcnJheShzZWFyY2gpKTsgLy8gZm9yIGZyb250IG1vY2sKLy8gcGxlYXNlIHVzZSBpdCBjYXV0aW91c2x5LCBpdCB3aWxsIHJlZGVmaW5lIFhNTEh0dHBSZXF1ZXN0LAovLyB3aGljaCB3aWxsIGNhdXNlIG1hbnkgb2YgeW91ciB0aGlyZC1wYXJ0eSBsaWJyYXJpZXMgdG8gYmUgaW52YWxpZGF0ZWQobGlrZSBwcm9ncmVzcyBldmVudCkuCgpmdW5jdGlvbiBtb2NrWEhSKCkgewogIC8vIG1vY2sgcGF0Y2gKICAvLyBodHRwczovL2dpdGh1Yi5jb20vbnV5c29mdC9Nb2NrL2lzc3Vlcy8zMDAKICBNb2NrLlhIUi5wcm90b3R5cGUucHJveHlfc2VuZCA9IE1vY2suWEhSLnByb3RvdHlwZS5zZW5kOwoKICBNb2NrLlhIUi5wcm90b3R5cGUuc2VuZCA9IGZ1bmN0aW9uICgpIHsKICAgIGlmICh0aGlzLmN1c3RvbS54aHIpIHsKICAgICAgdGhpcy5jdXN0b20ueGhyLndpdGhDcmVkZW50aWFscyA9IHRoaXMud2l0aENyZWRlbnRpYWxzIHx8IGZhbHNlOwoKICAgICAgaWYgKHRoaXMucmVzcG9uc2VUeXBlKSB7CiAgICAgICAgdGhpcy5jdXN0b20ueGhyLnJlc3BvbnNlVHlwZSA9IHRoaXMucmVzcG9uc2VUeXBlOwogICAgICB9CiAgICB9CgogICAgdGhpcy5wcm94eV9zZW5kLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKCiAgZnVuY3Rpb24gWEhSMkV4cHJlc3NSZXFXcmFwKHJlc3BvbmQpIHsKICAgIHJldHVybiBmdW5jdGlvbiAob3B0aW9ucykgewogICAgICB2YXIgcmVzdWx0ID0gbnVsbDsKCiAgICAgIGlmIChyZXNwb25kIGluc3RhbmNlb2YgRnVuY3Rpb24pIHsKICAgICAgICB2YXIgYm9keSA9IG9wdGlvbnMuYm9keSwKICAgICAgICAgICAgdHlwZSA9IG9wdGlvbnMudHlwZSwKICAgICAgICAgICAgdXJsID0gb3B0aW9ucy51cmw7IC8vIGh0dHBzOi8vZXhwcmVzc2pzLmNvbS9lbi80eC9hcGkuaHRtbCNyZXEKCiAgICAgICAgcmVzdWx0ID0gcmVzcG9uZCh7CiAgICAgICAgICBtZXRob2Q6IHR5cGUsCiAgICAgICAgICBib2R5OiBKU09OLnBhcnNlKGJvZHkpLAogICAgICAgICAgcXVlcnk6IHBhcmFtMk9iaih1cmwpCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmVzdWx0ID0gcmVzcG9uZDsKICAgICAgfQoKICAgICAgcmV0dXJuIE1vY2subW9jayhyZXN1bHQpOwogICAgfTsKICB9CgogIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihtb2NrcyksCiAgICAgIF9zdGVwOwoKICB0cnkgewogICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgdmFyIGkgPSBfc3RlcC52YWx1ZTsKICAgICAgTW9jay5tb2NrKG5ldyBSZWdFeHAoaS51cmwpLCBpLnR5cGUgfHwgJ2dldCcsIFhIUjJFeHByZXNzUmVxV3JhcChpLnJlc3BvbnNlKSk7CiAgICB9CiAgfSBjYXRjaCAoZXJyKSB7CiAgICBfaXRlcmF0b3IuZShlcnIpOwogIH0gZmluYWxseSB7CiAgICBfaXRlcmF0b3IuZigpOwogIH0KfQoKbW9kdWxlLmV4cG9ydHMgPSB7CiAgbW9ja3M6IG1vY2tzLAogIG1vY2tYSFI6IG1vY2tYSFIKfTs="},{"version":3,"sources":["C:/Users/jingguanran/Desktop/mscodevue/mock/index.js"],"names":["Mock","require","param2Obj","user","role","article","search","mocks","mockXHR","XHR","prototype","proxy_send","send","custom","xhr","withCredentials","responseType","arguments","XHR2ExpressReqWrap","respond","options","result","Function","body","type","url","method","JSON","parse","query","mock","i","RegExp","response","module","exports"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;eACsBA,OAAO,CAAC,SAAD,C;IAArBC,S,YAAAA,S;;AAER,IAAMC,IAAI,GAAGF,OAAO,CAAC,QAAD,CAApB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,QAAD,CAApB;;AACA,IAAMI,OAAO,GAAGJ,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMK,MAAM,GAAGL,OAAO,CAAC,iBAAD,CAAtB;;AAEA,IAAMM,KAAK,gCACNJ,IADM,sBAENC,IAFM,sBAGNC,OAHM,sBAINC,MAJM,EAAX,C,CAOA;AACA;AACA;;AACA,SAASE,OAAT,GAAmB;AACjB;AACA;AACAR,EAAAA,IAAI,CAACS,GAAL,CAASC,SAAT,CAAmBC,UAAnB,GAAgCX,IAAI,CAACS,GAAL,CAASC,SAAT,CAAmBE,IAAnD;;AACAZ,EAAAA,IAAI,CAACS,GAAL,CAASC,SAAT,CAAmBE,IAAnB,GAA0B,YAAW;AACnC,QAAI,KAAKC,MAAL,CAAYC,GAAhB,EAAqB;AACnB,WAAKD,MAAL,CAAYC,GAAZ,CAAgBC,eAAhB,GAAkC,KAAKA,eAAL,IAAwB,KAA1D;;AAEA,UAAI,KAAKC,YAAT,EAAuB;AACrB,aAAKH,MAAL,CAAYC,GAAZ,CAAgBE,YAAhB,GAA+B,KAAKA,YAApC;AACD;AACF;;AACD,SAAKL,UAAL,aAAmBM,SAAnB;AACD,GATD;;AAWA,WAASC,kBAAT,CAA4BC,OAA5B,EAAqC;AACnC,WAAO,UAASC,OAAT,EAAkB;AACvB,UAAIC,MAAM,GAAG,IAAb;;AACA,UAAIF,OAAO,YAAYG,QAAvB,EAAiC;AAAA,YACvBC,IADuB,GACHH,OADG,CACvBG,IADuB;AAAA,YACjBC,IADiB,GACHJ,OADG,CACjBI,IADiB;AAAA,YACXC,GADW,GACHL,OADG,CACXK,GADW,EAE/B;;AACAJ,QAAAA,MAAM,GAAGF,OAAO,CAAC;AACfO,UAAAA,MAAM,EAAEF,IADO;AAEfD,UAAAA,IAAI,EAAEI,IAAI,CAACC,KAAL,CAAWL,IAAX,CAFS;AAGfM,UAAAA,KAAK,EAAE3B,SAAS,CAACuB,GAAD;AAHD,SAAD,CAAhB;AAKD,OARD,MAQO;AACLJ,QAAAA,MAAM,GAAGF,OAAT;AACD;;AACD,aAAOnB,IAAI,CAAC8B,IAAL,CAAUT,MAAV,CAAP;AACD,KAdD;AAeD;;AA/BgB,6CAiCDd,KAjCC;AAAA;;AAAA;AAiCjB,wDAAuB;AAAA,UAAZwB,CAAY;AACrB/B,MAAAA,IAAI,CAAC8B,IAAL,CAAU,IAAIE,MAAJ,CAAWD,CAAC,CAACN,GAAb,CAAV,EAA6BM,CAAC,CAACP,IAAF,IAAU,KAAvC,EAA8CN,kBAAkB,CAACa,CAAC,CAACE,QAAH,CAAhE;AACD;AAnCgB;AAAA;AAAA;AAAA;AAAA;AAoClB;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACf5B,EAAAA,KAAK,EAALA,KADe;AAEfC,EAAAA,OAAO,EAAPA;AAFe,CAAjB","sourcesContent":["const Mock = require('mockjs')\nconst { param2Obj } = require('./utils')\n\nconst user = require('./user')\nconst role = require('./role')\nconst article = require('./article')\nconst search = require('./remote-search')\n\nconst mocks = [\n  ...user,\n  ...role,\n  ...article,\n  ...search\n]\n\n// for front mock\n// please use it cautiously, it will redefine XMLHttpRequest,\n// which will cause many of your third-party libraries to be invalidated(like progress event).\nfunction mockXHR() {\n  // mock patch\n  // https://github.com/nuysoft/Mock/issues/300\n  Mock.XHR.prototype.proxy_send = Mock.XHR.prototype.send\n  Mock.XHR.prototype.send = function() {\n    if (this.custom.xhr) {\n      this.custom.xhr.withCredentials = this.withCredentials || false\n\n      if (this.responseType) {\n        this.custom.xhr.responseType = this.responseType\n      }\n    }\n    this.proxy_send(...arguments)\n  }\n\n  function XHR2ExpressReqWrap(respond) {\n    return function(options) {\n      let result = null\n      if (respond instanceof Function) {\n        const { body, type, url } = options\n        // https://expressjs.com/en/4x/api.html#req\n        result = respond({\n          method: type,\n          body: JSON.parse(body),\n          query: param2Obj(url)\n        })\n      } else {\n        result = respond\n      }\n      return Mock.mock(result)\n    }\n  }\n\n  for (const i of mocks) {\n    Mock.mock(new RegExp(i.url), i.type || 'get', XHR2ExpressReqWrap(i.response))\n  }\n}\n\nmodule.exports = {\n  mocks,\n  mockXHR\n}\n"]}]}