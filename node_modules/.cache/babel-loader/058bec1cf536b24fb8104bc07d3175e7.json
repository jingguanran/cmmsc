{"remainingRequest":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\jingguanran\\Desktop\\mscodevue\\mock\\remote-search.js","dependencies":[{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\mock\\remote-search.js","mtime":1596417160044},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlciIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSIpOwoKdmFyIE1vY2sgPSByZXF1aXJlKCdtb2NranMnKTsKCnZhciBOYW1lTGlzdCA9IFtdOwp2YXIgY291bnQgPSAxMDA7Cgpmb3IgKHZhciBpID0gMDsgaSA8IGNvdW50OyBpKyspIHsKICBOYW1lTGlzdC5wdXNoKE1vY2subW9jayh7CiAgICBuYW1lOiAnQGZpcnN0JwogIH0pKTsKfQoKTmFtZUxpc3QucHVzaCh7CiAgbmFtZTogJ21vY2stUGFuJwp9KTsKbW9kdWxlLmV4cG9ydHMgPSBbLy8gdXNlcm5hbWUgc2VhcmNoCnsKICB1cmw6ICcvdnVlLWVsZW1lbnQtYWRtaW4vc2VhcmNoL3VzZXInLAogIHR5cGU6ICdnZXQnLAogIHJlc3BvbnNlOiBmdW5jdGlvbiByZXNwb25zZShjb25maWcpIHsKICAgIHZhciBuYW1lID0gY29uZmlnLnF1ZXJ5Lm5hbWU7CiAgICB2YXIgbW9ja05hbWVMaXN0ID0gTmFtZUxpc3QuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgIHZhciBsb3dlckNhc2VOYW1lID0gaXRlbS5uYW1lLnRvTG93ZXJDYXNlKCk7CiAgICAgIHJldHVybiAhKG5hbWUgJiYgbG93ZXJDYXNlTmFtZS5pbmRleE9mKG5hbWUudG9Mb3dlckNhc2UoKSkgPCAwKTsKICAgIH0pOwogICAgcmV0dXJuIHsKICAgICAgY29kZTogMjAwLAogICAgICBkYXRhOiB7CiAgICAgICAgaXRlbXM6IG1vY2tOYW1lTGlzdAogICAgICB9CiAgICB9OwogIH0KfSwgLy8gdHJhbnNhY3Rpb24gbGlzdAp7CiAgdXJsOiAnL3Z1ZS1lbGVtZW50LWFkbWluL3RyYW5zYWN0aW9uL2xpc3QnLAogIHR5cGU6ICdnZXQnLAogIHJlc3BvbnNlOiBmdW5jdGlvbiByZXNwb25zZShfKSB7CiAgICByZXR1cm4gewogICAgICBjb2RlOiAyMDAsCiAgICAgIGRhdGE6IHsKICAgICAgICB0b3RhbDogMjAsCiAgICAgICAgJ2l0ZW1zfDIwJzogW3sKICAgICAgICAgIG9yZGVyX25vOiAnQGd1aWQoKScsCiAgICAgICAgICB0aW1lc3RhbXA6ICtNb2NrLlJhbmRvbS5kYXRlKCdUJyksCiAgICAgICAgICB1c2VybmFtZTogJ0BuYW1lKCknLAogICAgICAgICAgcHJpY2U6ICdAZmxvYXQoMTAwMCwgMTUwMDAsIDAsIDIpJywKICAgICAgICAgICdzdGF0dXN8MSc6IFsnc3VjY2VzcycsICdwZW5kaW5nJ10KICAgICAgICB9XQogICAgICB9CiAgICB9OwogIH0KfV07"},{"version":3,"sources":["C:/Users/jingguanran/Desktop/mscodevue/mock/remote-search.js"],"names":["Mock","require","NameList","count","i","push","mock","name","module","exports","url","type","response","config","query","mockNameList","filter","item","lowerCaseName","toLowerCase","indexOf","code","data","items","_","total","order_no","timestamp","Random","date","username","price"],"mappings":";;;;;;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAMC,QAAQ,GAAG,EAAjB;AACA,IAAMC,KAAK,GAAG,GAAd;;AAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAApB,EAA2BC,CAAC,EAA5B,EAAgC;AAC9BF,EAAAA,QAAQ,CAACG,IAAT,CAAcL,IAAI,CAACM,IAAL,CAAU;AACtBC,IAAAA,IAAI,EAAE;AADgB,GAAV,CAAd;AAGD;;AACDL,QAAQ,CAACG,IAAT,CAAc;AAAEE,EAAAA,IAAI,EAAE;AAAR,CAAd;AAEAC,MAAM,CAACC,OAAP,GAAiB,CACf;AACA;AACEC,EAAAA,GAAG,EAAE,gCADP;AAEEC,EAAAA,IAAI,EAAE,KAFR;AAGEC,EAAAA,QAAQ,EAAE,kBAAAC,MAAM,EAAI;AAAA,QACVN,IADU,GACDM,MAAM,CAACC,KADN,CACVP,IADU;AAElB,QAAMQ,YAAY,GAAGb,QAAQ,CAACc,MAAT,CAAgB,UAAAC,IAAI,EAAI;AAC3C,UAAMC,aAAa,GAAGD,IAAI,CAACV,IAAL,CAAUY,WAAV,EAAtB;AACA,aAAO,EAAEZ,IAAI,IAAIW,aAAa,CAACE,OAAd,CAAsBb,IAAI,CAACY,WAAL,EAAtB,IAA4C,CAAtD,CAAP;AACD,KAHoB,CAArB;AAIA,WAAO;AACLE,MAAAA,IAAI,EAAE,GADD;AAELC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAER;AAAT;AAFD,KAAP;AAID;AAbH,CAFe,EAkBf;AACA;AACEL,EAAAA,GAAG,EAAE,qCADP;AAEEC,EAAAA,IAAI,EAAE,KAFR;AAGEC,EAAAA,QAAQ,EAAE,kBAAAY,CAAC,EAAI;AACb,WAAO;AACLH,MAAAA,IAAI,EAAE,GADD;AAELC,MAAAA,IAAI,EAAE;AACJG,QAAAA,KAAK,EAAE,EADH;AAEJ,oBAAY,CAAC;AACXC,UAAAA,QAAQ,EAAE,SADC;AAEXC,UAAAA,SAAS,EAAE,CAAC3B,IAAI,CAAC4B,MAAL,CAAYC,IAAZ,CAAiB,GAAjB,CAFD;AAGXC,UAAAA,QAAQ,EAAE,SAHC;AAIXC,UAAAA,KAAK,EAAE,2BAJI;AAKX,sBAAY,CAAC,SAAD,EAAY,SAAZ;AALD,SAAD;AAFR;AAFD,KAAP;AAaD;AAjBH,CAnBe,CAAjB","sourcesContent":["const Mock = require('mockjs')\n\nconst NameList = []\nconst count = 100\n\nfor (let i = 0; i < count; i++) {\n  NameList.push(Mock.mock({\n    name: '@first'\n  }))\n}\nNameList.push({ name: 'mock-Pan' })\n\nmodule.exports = [\n  // username search\n  {\n    url: '/vue-element-admin/search/user',\n    type: 'get',\n    response: config => {\n      const { name } = config.query\n      const mockNameList = NameList.filter(item => {\n        const lowerCaseName = item.name.toLowerCase()\n        return !(name && lowerCaseName.indexOf(name.toLowerCase()) < 0)\n      })\n      return {\n        code: 200,\n        data: { items: mockNameList }\n      }\n    }\n  },\n\n  // transaction list\n  {\n    url: '/vue-element-admin/transaction/list',\n    type: 'get',\n    response: _ => {\n      return {\n        code: 200,\n        data: {\n          total: 20,\n          'items|20': [{\n            order_no: '@guid()',\n            timestamp: +Mock.Random.date('T'),\n            username: '@name()',\n            price: '@float(1000, 15000, 0, 2)',\n            'status|1': ['success', 'pending']\n          }]\n        }\n      }\n    }\n  }\n]\n"]}]}