{"remainingRequest":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jingguanran\\Desktop\\mscodevue\\src\\store\\modules\\user.js","dependencies":[{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\src\\store\\modules\\user.js","mtime":1597221536360},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}