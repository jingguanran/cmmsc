{"remainingRequest":"D:\\zyttWork\\MSCode微服务平台-中移铁通有限公司智能产品分公司\\MSCode微服务平台源码和SQL-中移铁通有限公司智能产品分公司\\MSCode微服务平台升级(20200713)-中移铁通有限公司智能产品分公司\\mscodevue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\zyttWork\\MSCode微服务平台-中移铁通有限公司智能产品分公司\\MSCode微服务平台源码和SQL-中移铁通有限公司智能产品分公司\\MSCode微服务平台升级(20200713)-中移铁通有限公司智能产品分公司\\mscodevue\\src\\views\\personaloa\\assigneetask.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\zyttWork\\MSCode微服务平台-中移铁通有限公司智能产品分公司\\MSCode微服务平台源码和SQL-中移铁通有限公司智能产品分公司\\MSCode微服务平台升级(20200713)-中移铁通有限公司智能产品分公司\\mscodevue\\src\\views\\personaloa\\assigneetask.vue","mtime":1596417159348},{"path":"D:\\zyttWork\\MSCode微服务平台-中移铁通有限公司智能产品分公司\\MSCode微服务平台源码和SQL-中移铁通有限公司智能产品分公司\\MSCode微服务平台升级(20200713)-中移铁通有限公司智能产品分公司\\mscodevue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\zyttWork\\MSCode微服务平台-中移铁通有限公司智能产品分公司\\MSCode微服务平台源码和SQL-中移铁通有限公司智能产品分公司\\MSCode微服务平台升级(20200713)-中移铁通有限公司智能产品分公司\\mscodevue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\zyttWork\\MSCode微服务平台-中移铁通有限公司智能产品分公司\\MSCode微服务平台源码和SQL-中移铁通有限公司智能产品分公司\\MSCode微服务平台升级(20200713)-中移铁通有限公司智能产品分公司\\mscodevue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\zyttWork\\MSCode微服务平台-中移铁通有限公司智能产品分公司\\MSCode微服务平台源码和SQL-中移铁通有限公司智能产品分公司\\MSCode微服务平台升级(20200713)-中移铁通有限公司智能产品分公司\\mscodevue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["assigneetask.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"assigneetask.vue","sourceRoot":"src/views/personaloa","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input v-model=\"listQuery.taskName\" :placeholder=\"$t('task.current')\" clearable style=\"width: 200px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">\n        {{ $t('common.query') }}\n      </el-button>\n      <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-refresh-right\" @click=\"handleReset\">\n        {{ $t('common.reset') }}\n      </el-button>\n    </div>\n\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n    >\n      <el-table-column :label=\"$t('process.processDefinitionName')\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.processDefinitionName }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('process.processInstanceName')\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.processInstanceName }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('task.current')\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('task.startTime')\" min-width=\"100px\" prop=\"startTime\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.taskLocalVariables.startTime | parseTime('{y}-{m}-{d} {h}:{i}:{s}') }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('task.endTime')\" min-width=\"100px\" prop=\"endTime\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.taskLocalVariables.endTime | parseTime('{y}-{m}-{d} {h}:{i}:{s}') }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('task.description')\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.taskLocalVariables.description }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('common.operate')\" min-width=\"190px\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row}\">\n          <el-button type=\"primary\" size=\"mini\" style=\"margin-right: -5px\" @click=\"handleTrack(row)\">\n            {{ $t('process.track') }}\n          </el-button>\n          <el-button type=\"primary\" size=\"mini\" @click=\"handleComplete(row)\">\n            {{ $t('task.complete') }}\n          </el-button>\n          <el-button type=\"primary\" size=\"mini\" style=\"margin-left: 5px\" @click=\"handleDelegate(row)\">\n            {{ $t('task.delegate') }}\n          </el-button>\n          <el-button type=\"primary\" size=\"mini\" style=\"margin-left: 5px\" @click=\"handleRegress(row)\">\n            {{ $t('task.regress') }}\n          </el-button>\n          <el-button type=\"primary\" size=\"mini\" style=\"margin-top: 5px\" @click=\"handleReject(row)\">\n            {{ $t('task.reject') }}\n          </el-button>\n          <el-button type=\"primary\" size=\"mini\" style=\"margin-left: 5px\" @click=\"handleTerminate(row)\">\n            {{ $t('task.terminate') }}\n          </el-button>\n          <router-link :to=\"{path: '/personaloa/mytaskdetails', query: { processInstanceId: row.processInstanceId, processDefinitionName: row.processDefinitionName, processInstanceName: row.processInstanceName, name: row.name, startTime: row.taskLocalVariables.startTime, endTime: row.taskLocalVariables.endTime, description: row.taskLocalVariables.description } }\">\n            <el-button type=\"primary\" size=\"mini\" style=\"margin-left: 5px\">\n              {{ $t('process.details') }}\n            </el-button>\n          </router-link>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.currentPage\" :limit.sync=\"listQuery.pageSize\" @pagination=\"getList\" />\n\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"right\" label-width=\"90px\" style=\"width: 100%\">\n        <el-form-item v-if=\"dialogStatus==='complete' || dialogStatus==='delegate'\" :label=\"$t('process.candidate')\" prop=\"candidate\">\n          <el-select v-model=\"temp.candidate\" :placeholder=\"$t('common.choose')\" clearable class=\"filter-item\" style=\"width: 100%\">\n            <el-option-group v-for=\"group in candidateOptions\" :key=\"group.value\" :label=\"group.value\">\n              <el-option v-for=\"item in group.children\" :key=\"item.key\" :label=\"item.value\" :value=\"item.key\" />\n            </el-option-group>\n          </el-select>\n        </el-form-item>\n        <el-form-item :label=\"$t('process.comments')\" prop=\"comment\">\n          <el-input v-model=\"temp.comment\" type=\"textarea\" :placeholder=\"$t('common.enter')\" maxlength=\"512\" clearable />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">\n          {{ $t('common.cancel') }}\n        </el-button>\n        <el-button type=\"primary\" @click=\"startData()\">\n          {{ $t('common.confirm') }}\n        </el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog fullscreen :visible.sync=\"trackDialogVisible\">\n      <div v-html=\"svgSrc\" />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { queryPersonalTask, queryUsername, getHighLightedProcessDiagram, completeTask, resolveTask, delegateTask, regressTask, rejectTask, terminateTask } from '@/api/activiti'\nimport waves from '@/directive/waves' // waves directive\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\n\nexport default {\n  name: 'AssigneeTask',\n  components: { Pagination },\n  directives: { waves },\n  data() {\n    return {\n      tableKey: 0,\n      list: [],\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 10,\n        taskStatus: 'assignee',\n        taskName: undefined\n      },\n      candidateOptions: [],\n      temp: {\n        id: undefined\n      },\n      trackDialogVisible: false,\n      svgSrc: '',\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        complete: this.$t('task.complete'),\n        delegate: this.$t('task.delegate'),\n        regress: this.$t('task.regress'),\n        reject: this.$t('task.reject'),\n        terminate: this.$t('task.terminate')\n      },\n      rules: {\n        comment: [{ required: true, message: this.$t('task.taskComment-required'), trigger: 'blur' }]\n      }\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    getList() {\n      this.listLoading = true\n      queryPersonalTask(this.listQuery).then(response => {\n        this.list = response.data.list\n        this.total = response.data.pagination.total\n        this.listLoading = false\n      })\n      queryUsername().then(response => {\n        this.candidateOptions = response.data\n      })\n    },\n    handleFilter() {\n      this.listQuery.currentPage = 1\n      this.getList()\n    },\n    handleReset() {\n      this.listQuery.taskName = ''\n      this.handleFilter()\n    },\n    handleTrack(row) {\n      getHighLightedProcessDiagram(row.processInstanceId).then(response => {\n        if (response.message === 'success') {\n          this.svgSrc = response.data\n          this.trackDialogVisible = true\n        } else {\n          this.svgSrc = ''\n          this.handleWarning(response)\n        }\n      })\n    },\n    handleComplete(row) {\n      this.temp = Object.assign({}, row) // copy obj\n      this.dialogStatus = 'complete'\n      this.dialogFormVisible = true\n    },\n    handleDelegate(row) {\n      this.temp = Object.assign({}, row) // copy obj\n      this.dialogStatus = 'delegate'\n      this.dialogFormVisible = true\n    },\n    handleRegress(row) {\n      this.temp = Object.assign({}, row) // copy obj\n      this.dialogStatus = 'regress'\n      this.dialogFormVisible = true\n    },\n    handleReject(row) {\n      this.temp = Object.assign({}, row) // copy obj\n      this.dialogStatus = 'reject'\n      this.dialogFormVisible = true\n    },\n    handleTerminate(row) {\n      this.temp = Object.assign({}, row) // copy obj\n      this.dialogStatus = 'terminate'\n      this.dialogFormVisible = true\n    },\n    startData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          if (this.dialogStatus === 'complete' && (this.temp.delegationState === null || this.temp.delegationState === 'RESOLVED')) {\n            const tempData = {}\n            tempData.taskId = this.temp.id\n            tempData.processInstanceId = this.temp.processInstanceId\n            tempData.candidate = this.temp.candidate\n            tempData.comment = this.temp.comment\n            completeTask(tempData).then(response => {\n              if (response.message === 'success') {\n                this.list.unshift(this.temp)\n                this.dialogFormVisible = false\n                this.$notify({\n                  title: this.$t('common.success'),\n                  message: this.$t('task.complete-success'),\n                  type: 'success',\n                  duration: 2000\n                })\n                this.handleReset()\n              } else {\n                this.handleWarning(response)\n              }\n            })\n          } else if (this.dialogStatus === 'complete' && this.temp.delegationState === 'PENDING') {\n            const tempData = {}\n            tempData.taskId = this.temp.id\n            tempData.processInstanceId = this.temp.processInstanceId\n            tempData.comment = this.temp.comment\n            resolveTask(tempData).then(response => {\n              if (response.message === 'success') {\n                this.list.unshift(this.temp)\n                this.dialogFormVisible = false\n                this.$notify({\n                  title: this.$t('common.success'),\n                  message: this.$t('task.handle-delegate-success'),\n                  type: 'success',\n                  duration: 2000\n                })\n                this.handleReset()\n              } else {\n                this.handleWarning(response)\n              }\n            })\n          } else if (this.dialogStatus === 'delegate') {\n            const tempData = {}\n            tempData.taskId = this.temp.id\n            tempData.processInstanceId = this.temp.processInstanceId\n            tempData.assignee = this.temp.candidate\n            tempData.comment = this.temp.comment\n            delegateTask(tempData).then(response => {\n              if (response.message === 'success') {\n                this.list.unshift(this.temp)\n                this.dialogFormVisible = false\n                this.$notify({\n                  title: this.$t('common.success'),\n                  message: this.$t('task.delegate-success'),\n                  type: 'success',\n                  duration: 2000\n                })\n                this.handleReset()\n              } else {\n                this.handleWarning(response)\n              }\n            })\n          } else if (this.dialogStatus === 'regress') {\n            const tempData = {}\n            tempData.taskId = this.temp.id\n            tempData.processInstanceId = this.temp.processInstanceId\n            tempData.comment = this.temp.comment\n            regressTask(tempData).then(response => {\n              if (response.message === 'success') {\n                this.list.unshift(this.temp)\n                this.dialogFormVisible = false\n                this.$notify({\n                  title: this.$t('common.success'),\n                  message: this.$t('task.regress-success'),\n                  type: 'success',\n                  duration: 2000\n                })\n                this.handleReset()\n              } else {\n                this.handleWarning(response)\n              }\n            })\n          } else if (this.dialogStatus === 'reject') {\n            const tempData = {}\n            tempData.taskId = this.temp.id\n            tempData.processInstanceId = this.temp.processInstanceId\n            tempData.comment = this.temp.comment\n            rejectTask(tempData).then(response => {\n              if (response.message === 'success') {\n                this.list.unshift(this.temp)\n                this.dialogFormVisible = false\n                this.$notify({\n                  title: this.$t('common.success'),\n                  message: this.$t('task.reject-success'),\n                  type: 'success',\n                  duration: 2000\n                })\n                this.handleReset()\n              } else {\n                this.handleWarning(response)\n              }\n            })\n          } else if (this.dialogStatus === 'terminate') {\n            const tempData = {}\n            tempData.taskId = this.temp.id\n            tempData.processInstanceId = this.temp.processInstanceId\n            tempData.comment = this.temp.comment\n            terminateTask(tempData).then(response => {\n              if (response.message === 'success') {\n                this.list.unshift(this.temp)\n                this.dialogFormVisible = false\n                this.$notify({\n                  title: this.$t('common.success'),\n                  message: this.$t('task.terminate-success'),\n                  type: 'success',\n                  duration: 2000\n                })\n                this.handleReset()\n              } else {\n                this.handleWarning(response)\n              }\n            })\n          }\n        }\n      })\n    },\n    handleWarning(response) {\n      this.$notify({\n        title: this.$t('common.warning'),\n        message: response.message,\n        type: 'warning',\n        duration: 2000\n      })\n    }\n  }\n}\n</script>\n"]}]}