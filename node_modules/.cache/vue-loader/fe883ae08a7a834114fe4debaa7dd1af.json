{"remainingRequest":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jingguanran\\Desktop\\mscodevue\\src\\views\\personaloa\\myprocess.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\src\\views\\personaloa\\myprocess.vue","mtime":1596417159350},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHF1ZXJ5SGlzdG9yaWNQcm9jZXNzSW5zdGFuY2UsIGdldEhpZ2hMaWdodGVkUHJvY2Vzc0RpYWdyYW0gfSBmcm9tICdAL2FwaS9hY3Rpdml0aScKaW1wb3J0IHdhdmVzIGZyb20gJ0AvZGlyZWN0aXZlL3dhdmVzJyAvLyB3YXZlcyBkaXJlY3RpdmUKaW1wb3J0IFBhZ2luYXRpb24gZnJvbSAnQC9jb21wb25lbnRzL1BhZ2luYXRpb24nIC8vIHNlY29uZGFyeSBwYWNrYWdlIGJhc2VkIG9uIGVsLXBhZ2luYXRpb24KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTXlQcm9jZXNzJywKICBjb21wb25lbnRzOiB7IFBhZ2luYXRpb24gfSwKICBkaXJlY3RpdmVzOiB7IHdhdmVzIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhYmxlS2V5OiAwLAogICAgICBsaXN0OiBbXSwKICAgICAgdG90YWw6IDAsCiAgICAgIGxpc3RMb2FkaW5nOiB0cnVlLAogICAgICBsaXN0UXVlcnk6IHsKICAgICAgICBjdXJyZW50UGFnZTogMSwKICAgICAgICBwYWdlU2l6ZTogMTAsCiAgICAgICAgc3RhdHVzOiAncGVyc29uYWwnLAogICAgICAgIHByb2Nlc3NEZWZpbml0aW9uTmFtZTogdW5kZWZpbmVkCiAgICAgIH0sCiAgICAgIHRlbXA6IHsKICAgICAgICBpZDogdW5kZWZpbmVkCiAgICAgIH0sCiAgICAgIHRyYWNrRGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIHN2Z1NyYzogJycKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldExpc3QoKQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0TGlzdCgpIHsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWUKICAgICAgcXVlcnlIaXN0b3JpY1Byb2Nlc3NJbnN0YW5jZSh0aGlzLmxpc3RRdWVyeSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgdGhpcy5saXN0ID0gcmVzcG9uc2UuZGF0YS5saXN0CiAgICAgICAgdGhpcy50b3RhbCA9IHJlc3BvbnNlLmRhdGEucGFnaW5hdGlvbi50b3RhbAogICAgICAgIHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZQogICAgICB9KQogICAgfSwKICAgIGhhbmRsZUZpbHRlcigpIHsKICAgICAgdGhpcy5saXN0UXVlcnkuY3VycmVudFBhZ2UgPSAxCiAgICAgIHRoaXMuZ2V0TGlzdCgpCiAgICB9LAogICAgaGFuZGxlUmVzZXQoKSB7CiAgICAgIHRoaXMubGlzdFF1ZXJ5LnByb2Nlc3NEZWZpbml0aW9uTmFtZSA9ICcnCiAgICAgIHRoaXMuaGFuZGxlRmlsdGVyKCkKICAgIH0sCiAgICBoYW5kbGVUcmFjayhyb3cpIHsKICAgICAgZ2V0SGlnaExpZ2h0ZWRQcm9jZXNzRGlhZ3JhbShyb3cucHJvY2Vzc0luc3RhbmNlSWQpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIGlmIChyZXNwb25zZS5tZXNzYWdlID09PSAnc3VjY2VzcycpIHsKICAgICAgICAgIHRoaXMuc3ZnU3JjID0gcmVzcG9uc2UuZGF0YQogICAgICAgICAgdGhpcy50cmFja0RpYWxvZ1Zpc2libGUgPSB0cnVlCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuc3ZnU3JjID0gJycKICAgICAgICAgIHRoaXMuaGFuZGxlV2FybmluZyhyZXNwb25zZSkKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlV2FybmluZyhyZXNwb25zZSkgewogICAgICB0aGlzLiRub3RpZnkoewogICAgICAgIHRpdGxlOiB0aGlzLiR0KCdjb21tb24ud2FybmluZycpLAogICAgICAgIG1lc3NhZ2U6IHJlc3BvbnNlLm1lc3NhZ2UsCiAgICAgICAgdHlwZTogJ3dhcm5pbmcnLAogICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["myprocess.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"myprocess.vue","sourceRoot":"src/views/personaloa","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input v-model=\"listQuery.processDefinitionName\" :placeholder=\"$t('process.processDefinitionName')\" clearable style=\"width: 200px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">\n        {{ $t('common.query') }}\n      </el-button>\n      <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-refresh-right\" @click=\"handleReset\">\n        {{ $t('common.reset') }}\n      </el-button>\n    </div>\n\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n    >\n      <el-table-column :label=\"$t('process.processDefinitionKey')\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.processDefinitionKey }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('process.processDefinitionName')\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.processDefinitionName }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('process.processDefinitionVersion')\">\n        <template slot-scope=\"{row}\">\n          <el-tag type=\"success\">\n            <span>{{ 'v' + row.processDefinitionVersion }}</span>\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('process.status')\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.processStatus }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('process.startTime')\" min-width=\"100px\" prop=\"startTime\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.startTime | parseTime('{y}-{m}-{d} {h}:{i}:{s}') }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('process.endTime')\" min-width=\"100px\" prop=\"endTime\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.endTime | parseTime('{y}-{m}-{d} {h}:{i}:{s}') }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('common.operate')\" min-width=\"100px\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row}\">\n          <el-button type=\"primary\" size=\"mini\" style=\"margin-right: 5px\" @click=\"handleTrack(row)\">\n            {{ $t('process.track') }}\n          </el-button>\n          <router-link :to=\"{path: '/personaloa/myprocessdetails', query: { processInstanceId: row.processInstanceId, processDefinitionKey: row.processDefinitionKey, processDefinitionName: row.processDefinitionName, processDefinitionVersion: row.processDefinitionVersion, processStatus: row.processStatus, startTime: row.startTime, startUserId: row.startUserId, endTime: row.endTime } }\">\n            <el-button type=\"primary\" size=\"mini\">\n              {{ $t('process.details') }}\n            </el-button>\n          </router-link>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.currentPage\" :limit.sync=\"listQuery.pageSize\" @pagination=\"getList\" />\n\n    <el-dialog fullscreen :visible.sync=\"trackDialogVisible\">\n      <div v-html=\"svgSrc\" />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { queryHistoricProcessInstance, getHighLightedProcessDiagram } from '@/api/activiti'\nimport waves from '@/directive/waves' // waves directive\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\n\nexport default {\n  name: 'MyProcess',\n  components: { Pagination },\n  directives: { waves },\n  data() {\n    return {\n      tableKey: 0,\n      list: [],\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 10,\n        status: 'personal',\n        processDefinitionName: undefined\n      },\n      temp: {\n        id: undefined\n      },\n      trackDialogVisible: false,\n      svgSrc: ''\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    getList() {\n      this.listLoading = true\n      queryHistoricProcessInstance(this.listQuery).then(response => {\n        this.list = response.data.list\n        this.total = response.data.pagination.total\n        this.listLoading = false\n      })\n    },\n    handleFilter() {\n      this.listQuery.currentPage = 1\n      this.getList()\n    },\n    handleReset() {\n      this.listQuery.processDefinitionName = ''\n      this.handleFilter()\n    },\n    handleTrack(row) {\n      getHighLightedProcessDiagram(row.processInstanceId).then(response => {\n        if (response.message === 'success') {\n          this.svgSrc = response.data\n          this.trackDialogVisible = true\n        } else {\n          this.svgSrc = ''\n          this.handleWarning(response)\n        }\n      })\n    },\n    handleWarning(response) {\n      this.$notify({\n        title: this.$t('common.warning'),\n        message: response.message,\n        type: 'warning',\n        duration: 2000\n      })\n    }\n  }\n}\n</script>\n"]}]}