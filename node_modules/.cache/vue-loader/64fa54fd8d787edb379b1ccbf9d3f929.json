{"remainingRequest":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jingguanran\\Desktop\\mscodevue\\src\\views\\table\\drag-table.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\src\\views\\table\\drag-table.vue","mtime":1596419781064},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jingguanran\\Desktop\\mscodevue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNvcnRhYmxlLWdob3N0IHsKICBvcGFjaXR5OiAwLjg7CiAgY29sb3I6ICNmZmYgIWltcG9ydGFudDsKICBiYWNrZ3JvdW5kOiAjNDJiOTgzICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["drag-table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoLA;AACA;AACA;AACA;AACA","file":"drag-table.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- Note that row-key is necessary to get a correct row order. -->\n    <el-table\n      ref=\"dragTable\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      row-key=\"id\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%\"\n    >\n      <el-table-column\n        align=\"center\"\n        label=\"ID\"\n        width=\"65\"\n      >\n        <template slot-scope=\"{row}\">\n          <span>{{ row.id }}</span>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        width=\"180px\"\n        align=\"center\"\n        label=\"Date\"\n      >\n        <template slot-scope=\"{row}\">\n          <span>{{ row.timestamp | parseTime('{y}-{m}-{d} {h}:{i}') }}</span>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        min-width=\"300px\"\n        label=\"Title\"\n      >\n        <template slot-scope=\"{row}\">\n          <span>{{ row.title }}</span>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        width=\"110px\"\n        align=\"center\"\n        label=\"Author\"\n      >\n        <template slot-scope=\"{row}\">\n          <span>{{ row.author }}</span>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        width=\"100px\"\n        label=\"Importance\"\n      >\n        <template slot-scope=\"{row}\">\n          <svg-icon\n            v-for=\"n in + row.importance\"\n            :key=\"n\"\n            icon-class=\"star\"\n            class=\"icon-star\"\n          />\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        align=\"center\"\n        label=\"Readings\"\n        width=\"95\"\n      >\n        <template slot-scope=\"{row}\">\n          <span>{{ row.pageviews }}</span>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        class-name=\"status-col\"\n        label=\"Status\"\n        width=\"110\"\n      >\n        <template slot-scope=\"{row}\">\n          <el-tag :type=\"row.status | statusFilter\">\n            {{ row.status }}\n          </el-tag>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        align=\"center\"\n        label=\"Drag\"\n        width=\"80\"\n      >\n        <template slot-scope=\"{}\">\n          <svg-icon\n            class=\"drag-handler\"\n            icon-class=\"drag\"\n          />\n        </template>\n      </el-table-column>\n    </el-table>\n    <!-- $t is vue-i18n global function to translate lang (lang in @/lang)  -->\n    <div class=\"show-d\">\n      <el-tag style=\"margin-right:12px;\">{{ $t('table.dragTips1') }} :</el-tag> {{ oldList }}\n    </div>\n    <div class=\"show-d\">\n      <el-tag>{{ $t('table.dragTips2') }} :</el-tag> {{ newList }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { fetchList } from '@/api/article'\nimport Sortable from 'sortablejs'\n\nexport default {\n  name: 'DragTable',\n  filters: {\n    statusFilter (status) {\n      const statusMap = {\n        published: 'success',\n        draft: 'info',\n        deleted: 'danger'\n      }\n      return statusMap[status]\n    }\n  },\n  data () {\n    return {\n      list: null,\n      total: null,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 10\n      },\n      sortable: null,\n      oldList: [],\n      newList: []\n    }\n  },\n  created () {\n    this.getList()\n  },\n  methods: {\n    async getList () {\n      this.listLoading = true\n      const { data } = await fetchList(this.listQuery)\n      this.list = data.items\n      this.total = data.total\n      this.listLoading = false\n      this.oldList = this.list.map(v => v.id)\n      this.newList = this.oldList.slice()\n      this.$nextTick(() => {\n        this.setSort()\n      })\n    },\n    setSort () {\n      const el = this.$refs.dragTable.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0]\n      this.sortable = Sortable.create(el, {\n        ghostClass: 'sortable-ghost', // Class name for the drop placeholder,\n        setData: function (dataTransfer) {\n          // to avoid Firefox bug\n          dataTransfer.setData('Text', '')\n        },\n        onEnd: evt => {\n          const targetRow = this.list.splice(evt.oldIndex, 1)[0]\n          this.list.splice(evt.newIndex, 0, targetRow)\n\n          // for show the changes, you can delete in you code\n          const tempIndex = this.newList.splice(evt.oldIndex, 1)[0]\n          this.newList.splice(evt.newIndex, 0, tempIndex)\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style>\n.sortable-ghost {\n  opacity: 0.8;\n  color: #fff !important;\n  background: #42b983 !important;\n}\n</style>\n\n<style scoped>\n.icon-star {\n  margin-right: 2px;\n}\n.drag-handler {\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n}\n.show-d {\n  margin-top: 15px;\n}\n</style>\n"]}]}